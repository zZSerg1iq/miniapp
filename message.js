// –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ç–∏–ø–∞ "–°–æ–æ–±—â–µ–Ω–∏–µ"
function initMessage() {
    validateMessageForm();
}

function validateMessageForm() {
    const messageText = document.getElementById('message-text').value.trim();
    const fileInput = document.getElementById('message-file');
    const hasFile = fileInput.files.length > 0;
    
    const sendBtn = document.getElementById('send-message-btn');
    sendBtn.disabled = !(messageText || hasFile);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
async function uploadFile(file) {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞—à —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É
    return new Promise((resolve) => {
        const reader = new FileReader();
        reader.onload = function(e) {
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å fetch –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä
            const fileData = {
                url: URL.createObjectURL(file), // –≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞
                name: file.name,
                type: file.type,
                size: file.size,
                base64: e.target.result // –¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å base64
            };
            resolve(fileData);
        };
        reader.readAsDataURL(file);
    });
}

async function getMessageData() {
    const fileInput = document.getElementById('message-file');
    const file = fileInput.files[0];
    let fileData = null;
    
    if (file) {
        try {
            showStatus('üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞...', 'loading');
            fileData = await uploadFile(file);
            showStatus('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω', 'success');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
            showStatus('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞', 'error');
            return null;
        }
    }
    
    return {
        type: 'message',
        text: document.getElementById('message-text').value.trim(),
        file: fileData, // —Ç–µ–ø–µ—Ä—å –∑–¥–µ—Å—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞
        completionMessage: document.getElementById('message-completion-text').value.trim() || null,
        timestamp: new Date().toISOString()
    };
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ñ–æ—Ä–º—ã "–°–æ–æ–±—â–µ–Ω–∏–µ"
document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('message-text').addEventListener('input', validateMessageForm);
    
    document.getElementById('message-file').addEventListener('change', function(e) {
        const file = e.target.files[0];
        const fileInfo = document.getElementById('message-file-info');
        
        if (file) {
            const fileSizeMB = (file.size / (1024 * 1024)).toFixed(2);
            if (fileSizeMB > 10) {
                fileInfo.innerHTML = '<span style="color: red;">‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å. 10 –ú–ë)</span>';
                e.target.value = '';
            } else {
                fileInfo.innerHTML = `‚úÖ –§–∞–π–ª: ${file.name} (${fileSizeMB} –ú–ë)`;
            }
        } else {
            fileInfo.innerHTML = '';
        }
        validateMessageForm();
    });
    
    document.getElementById('send-message-btn').addEventListener('click', async () => {
        const sendBtn = document.getElementById('send-message-btn');
        sendBtn.disabled = true;
        sendBtn.textContent = 'üì§ –û—Ç–ø—Ä–∞–≤–∫–∞...';
        
        const data = await getMessageData();
        if (data) {
            sendData(data);
        }
        
        sendBtn.disabled = false;
        sendBtn.textContent = 'üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å';
    });
});
