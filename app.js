// üöÄ –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
let tg = null;
let selectedType = null;

function initializeApp() {
    tg = window.Telegram?.WebApp;
    
    if (tg) {
        try {
            tg.expand();
            tg.enableClosingConfirmation();
            
            // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const user = tg.initDataUnsafe?.user;
            const userId = user?.id || '–ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ';
            const userName = user ? 
                `${user.first_name || ''}${user.last_name ? ' ' + user.last_name : ''}`.trim() : 
                '–ê–Ω–æ–Ω–∏–º';
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            document.getElementById('user-id').textContent = userId;
            document.getElementById('user-name').textContent = userName;
            document.getElementById('platform-info').textContent = 
                `${tg.platform} ‚Ä¢ ${tg.colorScheme} —Ç–µ–º–∞`;
            
            console.log('Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return tg;
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error);
            return null;
        }
    } else {
        document.getElementById('platform-info').textContent = '–ë—Ä–∞—É–∑–µ—Ä (–≤–Ω–µ Telegram)';
        return null;
    }
}

function showStatus(text, type) {
    const statusEl = document.getElementById('status');
    statusEl.textContent = text;
    statusEl.className = `status ${type}`;
    statusEl.style.display = 'block';
}

function hideAllStageContent() {
    document.querySelectorAll('.stage-content').forEach(el => {
        el.style.display = 'none';
    });
}

function updateActiveButtons() {
    document.querySelectorAll('[data-type]').forEach(btn => {
        btn.classList.remove('btn-primary');
        btn.classList.add('btn-secondary');
    });
    
    if (selectedType) {
        const activeBtn = document.querySelector(`[data-type="${selectedType}"]`);
        if (activeBtn) {
            activeBtn.classList.remove('btn-secondary');
            activeBtn.classList.add('btn-primary');
        }
    }
}

function showStageContent(type) {
    hideAllStageContent();
    const contentEl = document.getElementById(`${type}-content`);
    if (contentEl) {
        contentEl.style.display = 'block';
    }
}

function sendData(data) {
    if (tg) {
        try {
            showStatus('–û—Ç–ø—Ä–∞–≤–∫–∞...', 'loading');
            tg.sendData(JSON.stringify(data));
            showStatus('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!', 'success');
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
            showStatus('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ', 'error');
        }
    } else {
        showStatus('‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ (–≤–Ω–µ Telegram)', 'success');
        console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', data);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —ç—Ç–∞–ø–∞
    document.querySelectorAll('[data-type]').forEach(btn => {
        btn.addEventListener('click', () => {
            selectedType = btn.dataset.type;
            updateActiveButtons();
            showStageContent(selectedType);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —Ç–∏–ø–∞ —Ñ—É–Ω–∫—Ü–∏–∏
            if (selectedType === 'geo') {
                initMap();
            } else if (selectedType === 'quiz') {
                initQuiz();
            } else if (selectedType === 'message') {
                initMessage();
            } else if (selectedType === 'riddle') {
                initRiddle();
            }
        });
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    initCompletionMessages();
});
